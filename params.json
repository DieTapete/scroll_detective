{"name":"ScrollDetective","tagline":"A minimal JavaScript module for manipulating DOM Elements when scrolling in certain directions or after scrolling stops.","body":"Scroll Detective\r\n=========\r\n\r\nA minimal JavaScript module for manipulating DOM Elements when scrolling in certain directions or after scrolling stops.\r\n\r\n## Installation\r\n\t\r\n\tnpm install scroll_detective --save\r\n\r\n  Furthermore jQuery or a similar library is required that supports the methods `on()`, `off()`, `trigger()` and querying selectors like jQuery.\r\n\r\n## Usage\r\n  HTML:\r\n\r\n  \t<div class=\"hide_on_scroll_down\">Hidden when you scroll down.</div>\r\n  \t<div class=\"hide_on_scroll_up\">Hidden when you scroll up.</div>\r\n\r\n  CSS:\r\n\r\n  \t.hide_on_scroll_up, .hide_on_scroll_down{\r\n  \t\topacity:1;\r\n  \t}\r\n\r\n\t.hidden{\r\n\t\topacity:0;\r\n\t}\r\n\r\n\t.hide_on_scroll_down.hidden{\r\n\t\ttop:-50px;\r\n\t}\r\n\r\n  JS:\r\n  \t\r\n  \tvar scroll_detective = ScrollDetective($);\r\n\r\n## Documentation\r\n###Supported CSS classes: \r\n  - `hide_on_scroll_down` : The CSS class `hidden` will be added as soon as the user scrolls down.\r\n  - `hide_on_scroll_up` : The CSS class `hidden` will be added as soon as the user scrolls up.\r\n  - `hide_on_scroll_stop` : The CSS class `hidden` will be added after the user stops scrolling.\r\n\r\n###Events: \r\n  - `scroll_hide` : Triggered by each element when it's being hidden.\r\n  - `scroll_show` : Triggered by each element when it's being shown.\r\n\r\n###Methods: \r\n  - `setEnabled(boolean)` : Set the enabled state.\r\n  - `enable()` : Convenience method for `setEnabled(true)`.\r\n  - `disable()` : Convenience method for `setEnabled(false)`.\r\n\r\n\r\n## Todo:\r\n  - Add Options to documentation\r\n  - Enable hiding without css classes\r\n  - Enable timeout for scroll_stop again after disabling.\r\n\r\n## Release History\r\n\r\n* 0.1.0 Initial release","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}